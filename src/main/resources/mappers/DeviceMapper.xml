<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.giot.platform.dao.DeviceMapper">
  <resultMap id="BaseResultMap" type="com.giot.platform.pojo.Device">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="modify_time" jdbcType="DATE" property="modifyTime" />
    <result column="protocol_id" jdbcType="INTEGER" property="protocolId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, product_id, icon_url, create_time, modify_time, protocol_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.giot.platform.pojo.Device">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into device (`name`, product_id, icon_url, 
      create_time, modify_time, protocol_id
      )
    values (#{name,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, #{iconUrl,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{modifyTime,jdbcType=DATE}, #{protocolId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.giot.platform.pojo.Device">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="iconUrl != null">
        icon_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="protocolId != null">
        protocol_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="iconUrl != null">
        #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=DATE},
      </if>
      <if test="protocolId != null">
        #{protocolId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.giot.platform.pojo.Device">
    update device
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="iconUrl != null">
        icon_url = #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=DATE},
      </if>
      <if test="protocolId != null">
        protocol_id = #{protocolId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.giot.platform.pojo.Device">
    update device
    set `name` = #{name,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      icon_url = #{iconUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      modify_time = #{modifyTime,jdbcType=DATE},
      protocol_id = #{protocolId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>